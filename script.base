# Presentation script, generated by SuperShow
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses>.
#
# Additional permission under GNU GPL version 3 section 7
#
# As a special exception, if you create a document which uses this
# script, and compile this script or a modified version of this script
# into the document, this script does not by itself cause the resulting
# document to be covered by the GNU General Public License.
# This exception does not however invalidate any other reasons why
# the document might be covered by the GNU General Public License.
.flash filename="{filename:out}" version=6 fps=30

.font roman "{filename:installpath}FreeSansBold.ttf"
.edittext timer font=roman color=#808080 size=30% width=200 height=30 border=none align="right" noselect variable=timecount
.edittext slide_no font=roman color=#808080 size=30% width=100 height=30 border=none align="center" noselect variable=slide_n

.outline play: M 12,12 L 12,87 L 87,50 L 12,12 .end
.outline pause: M 17,12 L 42,12 L 42,87 L 17,87 L 17,12 z M 57,12 L 82,12 L 82,87 L 57,87 L 57,12 .end
.outline rewind: M 87,12 L 62,32 L 62,12 L 12,50 L 62,87 L 62,67 L 87,87 L 87,12 .end
.outline forward: M 12,12 L 37,32 L 37,12 L 87,50 L 37,87 L 37,67 L 12,87 L 12,12 .end
.outline repeat: M 45,75 C 30,75 20,62 20,50 C 20,35 32,25 45,25 C 57,25 70,35 70,50 C 62,50 55,50 55,50 L 80,75 L 105,50 C 105,50 97,50 90,50 C 90,22 67,5 45,5 C 22,5 1.6838337e-14,22 0,50 C 0,77 22,95 45,95 C 45,85 45,85 45,75 .end
.outline plus: M 95,12 L 45,12 L 40,47 L 40,42 L 27,42 L 27,30 L 12,30 L 12,42 L 0,42 L 0,57 L 12,57 L 12,70 L 27,70 L 27,57 L 40,57 L 40,52 C 40,52 40,52 57,55 C 62,45 77,47 77,62 C 77,77 60,80 57,65 C 47,66 37,67 37,67 C 37,67 40,87 67,87 C 85,87 97,75 97,62 C 97,40 77,32 60,40 C 62,27 62,27 62,27 L 95,27 L 95,12 .end
.outline minus: M 95,12 L 45,12 L 40,47 L 40,42 L 27,42 L 12,42 L 0,42 L 0,57 L 12,57 L 27,57 L 40,57 L 40,52 C 40,52 40,52 57,55 C 62,45 77,47 77,62 C 77,77 60,80 57,65 C 47,66 37,67 37,67 C 37,67 40,87 67,87 C 85,87 97,75 97,62 C 97,40 77,32 60,40 C 62,27 62,27 62,27 L 95,27 L 95,12 .end

.filled b_play outline=play fill=grey color=black
.filled b_play_l outline=play fill=red color=black
.filled b_pause outline=pause fill=grey color=black
.filled b_pause_l outline=pause fill=red color=black
.filled b_rewind outline=rewind fill=grey color=black
.filled b_rewind_l outline=rewind fill=red color=black
.filled b_forward outline=forward fill=grey color=black
.filled b_forward_l outline=forward fill=red color=black
.filled b_plus outline=plus fill=grey color=black
.filled b_plus_l outline=plus fill=red color=black
.filled b_minus outline=minus fill=grey color=black
.filled b_minus_l outline=minus fill=red color=black
.filled b_again outline=repeat fill=red color=black
.filled b_again_l outline=repeat fill=orange color=black

.sound audio "{filename:audio}"
.swf slide_group "{filename:slides}"

.button button_play
	.show b_play as=idle
	.show b_play as=area
	.show b_play_l as=hover
	.show b_play as=pressed
	.on_release:
		snd.start(sound_position/1000.0,0);
		mode=1;
	.end
.end

.button button_pause
	.show b_pause as=idle
	.show b_pause as=area
	.show b_pause_l as=hover
	.show b_pause as=pressed
	.on_release:
		sound_position=snd.position;
		snd.stop();
		mode=0;
	.end
.end

.button button_forward
	.show b_forward as=idle
	.show b_forward as=area
	.show b_forward_l as=hover
	.show b_forward as=pressed
	.on_release:
		if (mode<2) {
			if (mode==0) {
				mode=1;
			}
			sound_position=snd.position;
			snd.stop();
			sound_position=times[position+1];
			if (sound_position>sound_len) {
				sound_position=sound_len-500;
			}
			snd.start(sound_position/1000.0,0);
		}
	.end
.end

.button button_rewind
	.show b_rewind as=idle
	.show b_rewind as=area
	.show b_rewind_l as=hover
	.show b_rewind as=pressed
	.on_release:
		if (mode<2) {
			if (mode==0) {
				mode=1;
			}
			sound_position=snd.position;
			snd.stop();
			if (position>0) {
				sound_position=times[position-1];
			} else {
				sound_position=0;
			}
			snd.start(sound_position/1000.0,0);
		}
	.end
.end

.button button_plus
	.show b_plus as=idle
	.show b_plus as=area
	.show b_plus_l as=hover
	.show b_plus as=pressed
	.on_release:
		if (mode<2) {
			if (mode==0) {
				mode=1;
			}
			sound_position=snd.position;
			snd.stop();
			sound_position+=5000;
			if (sound_position>sound_len) {
				sound_position=sound_len-500;
			}
			snd.start(sound_position/1000.0,0);
		}
	.end
.end

.button button_minus
	.show b_minus as=idle
	.show b_minus as=area
	.show b_minus_l as=hover
	.show b_minus as=pressed
	.on_release:
		if (mode<2) {
			if (mode==0) {
				mode=1;
			}
			sound_position=snd.position;
			snd.stop();
			if (sound_position>5000) {
				sound_position-=5000;
			} else {
				sound_position=0;
			}
			snd.start(sound_position/1000.0,0);
		}
	.end
.end

.button button_again
	.show b_again as=idle
	.show b_again as=area
	.show b_again_l as=hover
	.show b_again as=pressed
	.on_release:
		if (mode==2) {
			snd.stop();
			snd.start(0,0);
			slides.gotoAndStop(1);
			position=0;
			mode=1;
			show_slide=true;
			butagain._visible=0;
		}
	.end
.end

.action:
	var slide_width;
	var slide_height;

	var times=new Array();
	var maxtimes;
	var position;
	var mode;
	var sound_position;
	var sound_len;
	var show_slide;

	var addbuttons;
	var playagain;
	var autohide;

	addbuttons={var:addbuttons};
	playagain={var:playagain};
	autohide={var:autohidebuttons};

	snd=new Sound();
	snd.attachSound("audio");
	sound_len=snd.duration;
	position=0;
	mode=0;
	menu_y=0;
	show_slide=false;

	{maxtime:maxtimes}
	{timelist:times}
.end

.frame 1
	.put slides=slide_group
	.stop slides
	.put butplay=button_play
	.put butpause=button_pause
	.put butforward=button_forward
	.put butrewind=button_rewind
	.put butagain=button_again
	.put butplus=button_plus
	.put butminus=button_minus

	.put timer
	.put slide_no

	.action:
		slide_height=Stage.height;
		slide_width=Stage.width;
		sound_position=0;
		
		counter_percent = (slide_width/800)*100;

		buton_percent=15;
		buton_size=slide_width/buton_percent;
		buton_height=butminus._height+24;		

		butminus._x=buton_size*0;
		butminus._width*=slide_width/(100*buton_percent);
		butminus._height*=slide_width/(100*buton_percent);
		butrewind._x=buton_size*1;
		butrewind._width*=slide_width/(100*buton_percent);
		butrewind._height*=slide_width/(100*buton_percent);
		butplay._x=buton_size*2;
		butplay._width*=slide_width/(100*buton_percent);
		butplay._height*=slide_width/(100*buton_percent);
		butpause._x=buton_size*2;
		butpause._width*=slide_width/(100*buton_percent);
		butpause._height*=slide_width/(100*buton_percent);
		butforward._x=buton_size*3;
		butforward._width*=slide_width/(100*buton_percent);
		butforward._height*=slide_width/(100*buton_percent);
		butplus._x=buton_size*4;
		butplus._width*=slide_width/(100*buton_percent);
		butplus._height*=slide_width/(100*buton_percent);

		buton_height*=slide_width/(100*buton_percent);
		menu_des_y=buton_height;

		butagain._width*=slide_width/(100*buton_percent);
		butagain._height*=slide_width/(100*buton_percent);
		butagain._x=(slide_width-butagain._width)/2;
		butagain._y=(slide_height-butagain._height)/2;
		butagain._visible=0;

		timer._x=slide_width-(timer._width*(counter_percent/100)*1.05);
		timer._xscale=counter_percent;
		timer._yscale=counter_percent;
		slide_no._x=(slide_width-(slide_no._width*(counter_percent/100)))/2;
		slide_no._xscale=counter_percent;
		slide_no._yscale=counter_percent;

		butforward._y=slide_height;
		butrewind._y=slide_height;
		butplay._y=slide_height;
		butpause._y=slide_height;
		butplus._y=slide_height;
		butminus._y=slide_height;

		slides.onMouseMove = function() {
			if ((_xmouse>2)&&(_xmouse<(slide_width-3))&&(_ymouse>(slide_height-buton_height))&&(_ymouse<(slide_height-2))) {
				menu_des_y=buton_height;
			} else {
				if (mode==0) {
					menu_des_y=buton_height;
				} else {
					if (autohide==1) {
						menu_des_y=0;
					} else {
						menu_des_y=buton_height;
					}
				}
			}
		};

		if (addbuttons==1) {
			if (autohide==1) {
				Mouse.addListener(slides);
			}
		} else {
			butforward._visible=0;
			butrewind._visible=0;
			butplay._visible=0;
			butpause._visible=0;
			butplus._visible=0;
			butminus._visible=0;
			mode=1;
			snd.start(0,0);
		}

		function set_menu() {
			if (mode==2) {
				butforward._y=slide_height;
				butrewind._y=slide_height;
				butplay._y=slide_height;
				butpause._y=slide_height;
				butplus._y=slide_height;
				butminus._y=slide_height;
				butagain._visible=playagain;
				
				timer._y=slide_height;
				slide_no._y=slide_height;
				
			} else {
				butforward._y=slide_height-menu_y;
				butrewind._y=slide_height-menu_y;
				butplay._y=slide_height-menu_y;
				butpause._y=slide_height-menu_y;
				butplus._y=slide_height-menu_y;
				butminus._y=slide_height-menu_y;
				butagain._visible=0;
				
				timer._y=slide_height-menu_y;
				slide_no._y=slide_height-menu_y;
				
				if (mode==0) {
					butplay._visible=1;
					butpause._visible=0;
				} else {
					butplay._visible=0;
					butpause._visible=1;
				}
			}
		};
	.end

.frame 6
	.action:
	
		audioDuration = snd.duration;
		hoursTotal = int(audioDuration / 3600000);
		minutesTotal = int(audioDuration / 60000);
		secondsTotal = int((audioDuration/1000)- (minutesTotal*60) - (hoursTotal*3600));
		hours = int(snd.position / 3600000);
		minutes = int(snd.position / 60000);
		seconds = int((snd.position/1000)- (minutes*60) - (hours*3600));
		if (hoursTotal < 10) {th = "0" + hoursTotal;} else {th = hoursTotal;}
		if (minutesTotal < 10) {tm = "0" + minutesTotal;} else {tm = minutesTotal;}
		if (secondsTotal < 10) {ts = "0" + secondsTotal;} else {ts = secondsTotal;}
		if (hours < 10) {hs = "0" + hours;} else {hs = hours;}
		if (minutes < 10) {ms = "0" + minutes;} else {ms = minutes;}
		if (seconds < 10) {ss = "0" + seconds;} else {ss = seconds;}
		timecount = hs + ":" + ms + ":" + ss + " / " + th + ":" +  tm + ":" + ts;
		slide_n= position+1 + "/" + maxtimes;
	
		if (addbuttons==1) {
			if ((menu_y)<(menu_des_y)) {
				menu_y+=1+(menu_des_y-menu_y)/2;
			} 
			if ((menu_y)>(menu_des_y)) {
				menu_y-=1+(menu_y-menu_des_y)/8;
			}
		}
		set_menu();

		if (mode==1) {
			sndpos=snd.position;
			if (sndpos+100>sound_len) {
				snd.stop();
				mode=2;
			} else {
				if ((sndpos>=times[position])&&(sndpos<times[position+1])) {
					if (show_slide) {
						slides.gotoAndStop(position+1);
						show_slide=false;
					}
				} else {
					if (position>maxtimes) {
						snd.stop();
						mode=2;
					} else {
						if (sndpos<times[position]) {
							position-=1;
						} else {
							position+=1;
						}
						show_slide=true;
					}
				}
			}
		}
		gotoandPlay(5);
	.end

.end
